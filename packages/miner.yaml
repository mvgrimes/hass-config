#

homeassistant:
  customize:
    sensor.mean_rate:
      friendly_name: Mean Hash Rate (30m)
      custom_ui_state_card: state-card-custom-ui
      show_last_changed: true

    switch.restart_miner:
      friendly_name: Restart Miner
      custom_ui_state_card: state-card-custom-ui
      confirm_controls_show_lock: true

    switch.miner_power:
      custom_ui_state_card: state-card-custom-ui
      confirm_controls_show_lock: true

    group.miner:
      control: hidden

group:
  miner:
    name: Miner
    entities:
      - sensor.mean_rate
      # - sensor.miner_payout
      # - sensor.miner_up_time
      - switch.miner_power
      - switch.restart_miner
      - sensor.basement_temperature

shell_command:
  restart_miner: '/srv/app/hass/config/bin/restart-miner.sh'

# Don't really need the script anymore, but keeping in case we want to
# add more steps to the sequence
script:
  restart_miner:
    sequence:
      - service: shell_command.restart_miner

# Create a switch just so we can use custom-ui confirm
switch:
  - platform: tplink
    host: 192.168.1.29
    name: Miner Power

  - platform: template
    switches:
      restart_miner:
        value_template: "{{ false }}"
        turn_on:
          service: script.restart_miner
        turn_off:

sensor:
  - platform: influxdb
    host: pip
    queries:
      - name: mean rate
        unit_of_measurement: "GH/s"
        where: 'time > now() - 30m'
        measurement: miner_rate
        field: value
        group_function: mean
        database: home_assistant
        value_template: '{{ value | round(1) }}'
      # - name: payout est
      #   unit_of_measurement: "bitcoin"
      #   where: 'time > now() - 30m'
      #   measurement: miner_payout
      #   field: value
      #   group_function: mean
      #   database: home_assistant
      #   value_template: '{{ value | round(4) }}'

  # sshpass not available inside docker container
  # - platform: command_line
  #   name: Miner Up Time
  #   scan_interval: 120
  #   command: "sshpass -p admin ssh root@antminer '/bin/cat /proc/uptime'"
  #   unit_of_measurement: minutes
  #   value_template: '{{ ( float(value.split(" ")[0]) / 60 ) | round(0) }}'

  # - platform: template
  #   sensors:
  #     miner_payout:
  #       friendly_name: Miner Payout Est
  #       unit_of_measurement: '$'
  #       value_template: "{{ ( float(states.sensor.payout_est.state) * float(states.sensor.bitcoin_value.state)  ) | round(2) }}"
