# -------------------------------------------
homeassistant:
  customize_glob:
    "sensor.zone_*":
      custom_ui_state_card: state-card-custom-ui
      icon: mdi:water
      extra_data_template:
        - 'queued ${attributes.queued}'
        - 'duration ${attributes.duration}'
  customize:
    sensor.zone_1:
      friendly_name: Front Bushes
    sensor.zone_2:
      friendly_name: Front Lawn
    sensor.zone_3:
      friendly_name: Back Bushes
    sensor.zone_4:
      friendly_name: Back Lawn
    sensor.zone_5:
      friendly_name: Back Fence
    sensor.zone_6:
      friendly_name: Flower Boxes

group:
  sprinkler_status:
    name: Sprinkler Status
    entities:
      - sensor.zone_1
      - sensor.zone_2
      - sensor.zone_3
      - sensor.zone_4
      - sensor.zone_5
      - sensor.zone_6
      - sensor.zone_7
      - sensor.zone_8
  sprinkler_switches:
    name: Sprinkler Switches
    entities:
      - switch.zone_1
      - switch.zone_2
      - switch.zone_3
      - switch.zone_4
      - switch.zone_5
      - switch.zone_6
      - switch.zone_7
      - switch.zone_8
  sprinkler_settings:
    name: Sprinkler Settings
    entities:
      - input_number.zone_1
      - input_number.zone_2
      - input_number.zone_3
      - input_number.zone_4
      - input_number.zone_5
      - input_number.zone_6
      - input_number.zone_7
      - input_number.zone_8

sensor:
  - platform: mqtt
    state_topic: "hass/sprinkler01/1"
    name: "Zone 1"
    # unit_of_measurement: "%"
    value_template: '{{ value_json.on }}'
    json_attributes:
      - duration
      - queued
      - secs_left

  - platform: mqtt
    state_topic: "hass/sprinkler01/2"
    name: "Zone 2"
    # unit_of_measurement: "%"
    value_template: '{{ value_json.on }}'
    json_attributes:
      - duration
      - queued
      - secs_left

  - platform: mqtt
    state_topic: "hass/sprinkler01/3"
    name: "Zone 3"
    # unit_of_measurement: "%"
    value_template: '{{ value_json.on }}'
    json_attributes:
      - duration
      - queued
      - secs_left

  - platform: mqtt
    state_topic: "hass/sprinkler01/4"
    name: "Zone 4"
    # unit_of_measurement: "%"
    value_template: '{{ value_json.on }}'
    json_attributes:
      - duration
      - queued
      - secs_left

  - platform: mqtt
    state_topic: "hass/sprinkler01/5"
    name: "Zone 5"
    # unit_of_measurement: "%"
    value_template: '{{ value_json.on }}'
    json_attributes:
      - duration
      - queued
      - secs_left

  - platform: mqtt
    state_topic: "hass/sprinkler01/6"
    name: "Zone 6"
    # unit_of_measurement: "%"
    value_template: '{{ value_json.on }}'
    json_attributes:
      - duration
      - queued
      - secs_left

  - platform: mqtt
    state_topic: "hass/sprinkler01/7"
    name: "Zone 7"
    # unit_of_measurement: "%"
    value_template: '{{ value_json.on }}'
    json_attributes:
      - duration
      - queued
      - secs_left

  - platform: mqtt
    state_topic: "hass/sprinkler01/8"
    name: "Zone 8"
    # unit_of_measurement: "%"
    value_template: '{{ value_json.on }}'
    json_attributes:
      - duration
      - queued
      - secs_left

binary_sensor:
  - platform: template
    sensors:
      rain_expected:
        friendly_name: "Rain expected"
        device_class: moisture
        value_template: >
          {{ float(states("sensor.pws_precip_1d_in")) + float(states("sensor.pws_precip_1d_in")) > 0.5 }}

switch:
  - platform: template
    switches:
      zone_1:
        friendly_name: Front Bushes
        value_template: "{{ states.sensor.zone_1.state }}"
        turn_on:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": true, "zones": [{ "id": 1, "dur": {{ states.input_number.zone_1.state }} }] }'
        turn_off:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": false, "zones": [ 1 ] }'
      zone_2:
        friendly_name: Front Lawn
        value_template: "{{ states.sensor.zone_2.state }}"
        turn_on:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": true, "zones": [{ "id": 2, "dur": {{ states.input_number.zone_2.state }} }] }'
        turn_off:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": false, "zones": [ 2 ] }'
      zone_3:
        friendly_name: Back Bushes
        value_template: "{{ states.sensor.zone_3.state }}"
        turn_on:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": true, "zones": [{ "id": 3, "dur": {{ states.input_number.zone_3.state }} }] }'
        turn_off:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": false, "zones": [ 3 ] }'
      zone_4:
        friendly_name: Back Lawn
        value_template: "{{ states.sensor.zone_4.state }}"
        turn_on:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": true, "zones": [{ "id": 4, "dur": {{ states.input_number.zone_4.state }} }] }'
        turn_off:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": false, "zones": [ 4 ] }'
      zone_5:
        friendly_name: Back Fence
        value_template: "{{ states.sensor.zone_5.state }}"
        turn_on:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": true, "zones": [{ "id": 5, "dur": {{ states.input_number.zone_5.state }} }] }'
        turn_off:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": false, "zones": [ 5 ] }'
      zone_6:
        friendly_name: Flower Boxes
        value_template: "{{ states.sensor.zone_6.state }}"
        turn_on:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": true, "zones": [{ "id": 6, "dur": {{ states.input_number.zone_6.state }} }] }'
        turn_off:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": false, "zones": [ 6 ] }'
      zone_7:
        friendly_name: Zone 7
        value_template: "{{ states.sensor.zone_7.state }}"
        turn_on:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": true, "zones": [{ "id": 7, "dur": {{ states.input_number.zone_7.state }} }] }'
        turn_off:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": false, "zones": [ 7 ] }'
      zone_8:
        friendly_name: Zone 8
        value_template: "{{ states.sensor.zone_8.state }}"
        turn_on:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": true, "zones": [{ "id": 8, "dur": {{ states.input_number.zone_8.state }} }] }'
        turn_off:
          service: mqtt.publish
          data:
            topic: 'hass/sprinkler01/set'
            payload_template: '{ "on": false, "zones": [ 8 ] }'

input_number:
  zone_1:
    name: Front Bushes
    # initial: 10
    min: 0
    max: 40
    step: 1
    unit_of_measurement: 'min'
  zone_2:
    name: Front Lawn
    # initial: 10
    min: 0
    max: 40
    step: 1
    unit_of_measurement: 'min'
  zone_3:
    name: Back Bushes
    # initial: 10
    min: 0
    max: 40
    step: 1
    unit_of_measurement: 'min'
  zone_4:
    name: Back Lawn
    # initial: 10
    min: 0
    max: 40
    step: 1
    unit_of_measurement: 'min'
  zone_5:
    name: Back Fence
    # initial: 10
    min: 0
    max: 40
    step: 1
    unit_of_measurement: 'min'
  zone_6:
    name: Flower Boxes
    # initial: 10
    min: 0
    max: 40
    step: 1
    unit_of_measurement: 'min'
  zone_7:
    name: Zone 7
    # initial: 10
    min: 0
    max: 40
    step: 1
    unit_of_measurement: 'min'
  zone_8:
    name: Zone 8
    # initial: 10
    min: 0
    max: 40
    step: 1
    unit_of_measurement: 'min'

automation:
  - alias: 'Sprinkler notify'
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: sensor.zone_1, sensor.zone_2, sensor.zone_3, sensor.zone_4, sensor.zone_5, sensor.zone_6, sensor.zone_7, sensor.zone_8
      from: 'False'
      to: 'True'
    action:
      - service: notify.pushover
        data_template:
          title: 'HA Sprinkler On'
          message: 'Sprinkler Zone {{ trigger.entity_id }} ON'
