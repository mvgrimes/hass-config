# -------------------------------------------
#  Fire Tablet Pet Panel - Keep track of last feeding/walking
#  Custom sensors and groups
# -------------------------------------------

homeassistant:
  customize_glob:
    "sensor.*fed":
      hours_between: 6
    "sensor.*walked":
      hours_between: 6
  customize:
    "sensor.fishfed":
      hours_between: 18

# ---Sensors for Fire Tablet-----------------------------
binary_sensor:
  - platform: mqtt
    state_topic: floorplan/clock_motion
    name: Clock Motion
    device_class: motion
    retain: true
    hidden: false

  - platform: mqtt
    state_topic: floorplan/clock_plugged
    name: Clock Plugged
    retain: true
    hidden: false

# This is a bit complicated b/c we to trigger an update based on
# a combination of the <pet>fed_time and now().
#
# Fed times are stored as seconds since epoch in MQTT.
# Displayed as <pet>fed_time in human readable format.
# Then converted back to epoch to compare with current time.
sensor:
  - platform: mqtt
    state_topic: "pets/dogfed_time"
    name: dogfed_time
    value_template: '{{ value | float | timestamp_local }}'

  - platform: mqtt
    state_topic: "pets/catfed_time"
    name: catfed_time
    value_template: '{{ value | float | timestamp_local }}'

  - platform: mqtt
    state_topic: "pets/dogwalked_time"
    name: dogwalked_time
    value_template: '{{ value | float | timestamp_local }}'

  - platform: mqtt
    state_topic: "pets/fishfed_time"
    name: fishfed_time
    value_template: '{{ value | float | timestamp_local }}'

  - platform: mqtt
    state_topic: "pets/pigfed_time"
    name: pigfed_time
    value_template: '{{ value | float | timestamp_local }}'

  - platform: template
    sensors:
      dogfed:
        unit_of_measurement: 'hours'
        entity_id:
          - sensor.dogfed_time
          - sensor.clock_time
        value_template: >-
          {{ ( ( as_timestamp(now()) - as_timestamp(strptime(states.sensor.dogfed_time.state, "%Y-%m-%d %H:%M:%S")) ) / ( 60*60 ) ) | round(1) }}
      catfed:
        unit_of_measurement: 'hours'
        entity_id:
          - sensor.catfed_time
          - sensor.clock_time
        value_template: >-
          {{ ( ( as_timestamp(now()) - as_timestamp(strptime(states.sensor.catfed_time.state, "%Y-%m-%d %H:%M:%S")) ) / ( 60*60 ) ) | round(1) }}
      dogwalked:
        unit_of_measurement: 'hours'
        entity_id:
          - sensor.dogwalked_time
          - sensor.clock_time
        value_template: >-
          {{ ( ( as_timestamp(now()) - as_timestamp(strptime(states.sensor.dogwalked_time.state, "%Y-%m-%d %H:%M:%S")) ) / ( 60*60 ) ) | round(1) }}
      fishfed:
        unit_of_measurement: 'hours'
        entity_id:
          - sensor.fishfed_time
          - sensor.clock_time
        value_template: >-
          {{ ( ( as_timestamp(now()) - as_timestamp(strptime(states.sensor.fishfed_time.state, "%Y-%m-%d %H:%M:%S")) ) / ( 60*60 ) ) | round(1) }}
      pigfed:
        unit_of_measurement: 'hours'
        entity_id:
          - sensor.pigfed_time
          - sensor.clock_time
        value_template: >-
          {{ ( ( as_timestamp(now()) - as_timestamp(strptime(states.sensor.pigfed_time.state, "%Y-%m-%d %H:%M:%S")) ) / ( 60*60 ) ) | round(1) }}

    # True/False
    # {{ as_timestamp(strptime(states.sensor.dogfed_time.state, "%Y-%m-%d %H:%M:%S")) > ( as_timestamp(now()) - 60 ) }}

group:
  pets:
    name: Pets
    control: hidden
    entities:
      - sensor.dogfed_time
      - sensor.catfed_time
      - sensor.dogwalked_time
      - sensor.fishfed_time
      - sensor.pigfed_time
