# Make sure mqtt-bridge is running:
#
#   $ cd /srv/docker/mqtt-bridge
#   $ docker-compose up -d
#
# Plus the Smarter SmartThings Devices and SmartApp
#   https://home-assistant.io/blog/2016/02/09/Smarter-Smart-Things-with-MQTT-and-Home-Assistant/
#
# For the thermostat, see:
#   https://community.home-assistant.io/t/adding-thermostat-controls-from-smartthings-via-mqtt/

homeassistant:
  customize:
    group.den_thermostat:
      friendly_name: 'Den Thermostat'
      icon: mdi:fan
    switch.den_thermostat_fan_mode:
      icon: mdi:fan
    sensor.den_thermostat_current_state:
      icon: mdi:fan
    sensor.den_thermostat_battery:
      icon: mdi:battery-outline

sensor:
  # --- Den ---
  - platform: mqtt
    state_topic: "smartthings/Den Thermostat/temperature"
    name: "Den Thermostat Temp"
    unit_of_measurement: "Â°F"

  - platform: mqtt
    name: "Den Thermostat Current State"
    state_topic: "smartthings/Den Thermostat/thermostatOperatingState"   # cooling | heating | idle

  - platform: mqtt
    name: "Den Thermostat Battery"
    state_topic: "smartthings/Den Thermostat/battery"
    unit_of_measurement: '%'

  - platform: template
    sensors:
      den_expected_state:
        friendly_name: Den Expected State
        entity_id:
          - input_select.kitchen_thermostat_current_mode
          - sensor.kitchen_thermostat_temp
          - input_number.kitchen_heating_target
          - input_number.kitchen_cooling_target
        value_template: >-
          {% if states.input_select.kitchen_thermostat_mode.state == "heat" %}
            {% if float(states.sensor.kitchen_thermostat_temp.state)
                    < float(states.input_number.kitchen_heating_target.state) -%}
              Heating
            {%- else -%}
              Off
            {%- endif %}
          {% elif states.input_select.kitchen_thermostat_mode.state == "cool" %}
            {% if float(states.sensor.kitchen_thermostat_temp.state)
                    > float(states.input_number.kitchen_cooling_target.state) -%}
              Cooling
            {%- else -%}
              Off
            {%- endif %}
          {% else %}
            Unknown
          {% endif %}


switch:
  # --- Den Fan Mode ---
  - platform: mqtt
    name: "Den Thermostat Fan Mode"
    state_topic: "smartthings/Den Thermostat/thermostatFanMode"   # auto | on
    command_topic: "smartthings/Den Thermostat/thermostatFanMode"   # auto | on
    payload_on: "on"
    payload_off: "auto"

input_select:
  # --- Den Thermostate Mode dropdown ---
  den_thermostat_mode:
    name: Den Thermostat Mode
    options:
      - "auto"
      - "off"
      - "cool"
      - "heat"
    icon: mdi:fan

input_number:
  # -- Den Therm targets ---
  den_heating_target:
    name: Den Heating Target
    initial: 68
    min: 50
    max: 75
    step: 1

  den_cooling_target:
    name: Den Cooling Target
    initial: 76
    min: 68
    max: 110
    step: 1

automation:

  # --- Den Thermostat ---
  # Keep mode in sync b/w MQTT/dropdown
  - alias: Set Den Thermostat Mode Selector
    initial_state: 'on'
    trigger:
      - platform: mqtt
        topic: "smartthings/Den Thermostat/thermostatMode"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.den_thermostat_mode
          option: '{{ trigger.payload }}'
  - alias: Set Den Thermostat Mode
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_select.den_thermostat_mode
      # Might need for this and for setpoint
      # - platform: event
      #   event_type: state_change
      #   event_data:
      #     entity_id: sensor.den_thermostat_current_mode
    action:
      - service: mqtt.publish
        data_template:
          topic: "smartthings/Den Thermostat/thermostatMode"
          payload: '{{ states.input_select.den_thermostat_mode.state }}'
          retain: true

  # Keep heatSetpoint in sync b/w MQTT and slider
  - alias: Den Heating Target Set
    initial_state: 'on'
    trigger:
      - platform: mqtt
        topic: "smartthings/Den Thermostat/heatingSetpoint"
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.den_heating_target
          value: '{{ trigger.payload}}'
  - alias: Set Den Heating Target
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_number.den_heating_target
    action:
      - service: mqtt.publish
        data_template:
          topic: "smartthings/Den Thermostat/heatingSetpoint"
          payload: '{{ states.input_number.den_heating_target.state | int }}'
          retain: true
      - condition: state
        entity_id: input_boolean.debug_mode
        state: 'on'
      - service: notify.pushover
        data_template:
          title: 'HA HVAC'
          message: >-
            [Den heat]
            setpoint={{ states.input_number.den_heating_target.state }},
            temp={{ states.sensor.den_thermostat_temp.state }}
            target={{ states.input_number.front_heating_target.state }},
            v_temp={{ states.sensor.front_temps.state }},
            temps={{ states.sensor.den_thermostat_temp.state }}/{{ states.sensor.girls_br_temp.state }}

  # Keep coolingSetpoint in sync b/w MQTT and slider
  - alias: Den Cooling Target Set
    initial_state: 'on'
    trigger:
      - platform: mqtt
        topic: "smartthings/Den Thermostat/coolingSetpoint"
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.den_cooling_target
          value: '{{ trigger.payload}}'
  - alias: Set Den Cooling Target
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_number.den_cooling_target
    action:
      - service: mqtt.publish
        data_template:
          topic: "smartthings/Den Thermostat/coolingSetpoint"
          payload: '{{ states.input_number.den_cooling_target.state | int }}'
          retain: true
      - condition: state
        entity_id: input_boolean.debug_mode
        state: 'on'
      - service: notify.pushover
        data_template:
          title: 'HA HVAC'
          message: >-
            [Den cool]
            setpoint={{ states.input_number.den_cooling_target.state }},
            temp={{ states.sensor.den_thermostat_temp.state }}
            target={{ states.input_number.front_cooling_target.state }},
            v_temp={{ states.sensor.front_temps.state }},
            temps={{ states.sensor.den_thermostat_temp.state }}/{{ states.sensor.girls_br_temp.state }}

group:
  den_thermostat:
    - sensor.den_thermostat_temp
    - input_select.den_thermostat_mode
    - switch.den_thermostat_fan_mode
    - sensor.den_expected_state
    - sensor.den_thermostat_current_state
    - input_number.den_heating_target
    - input_number.den_cooling_target
    - sensor.den_thermostat_battery


# Would like to use this, but:
# - climate only has mode_state, we have mode (heat,cool,auto,off) and
#   operatingState (heating, cooling, idle)
# - think we need heat setpoint and coolsetpoint (not just thermostatSetpoint)
#
# climate:
#   - platform: mqtt
#     name: Den
#     modes:
#       - off
#       - idle
#       - cooling
#       - heating
#     current_temperature_topic: "smartthings/Den Thermostat/temperature"
#     mode_state_topic: "smartthings/Den Thermostat/thermostatOperatingState"
#     mode_command_topic: "smartthings/Den Thermostat/thermostatOperatingState"
#     temperature_state_topic: "smartthings/Den Thermostat/thermostatSetpoint"
#     temperature_command_topic: "smartthings/Den Thermostat/thermostatSetpoint"
#     # thermostatMode
#     # fan_mode_state_topic: "study/ac/fan/set"
#     # fan_mode_command_topic: "study/ac/fan/set"
#     retain: true
