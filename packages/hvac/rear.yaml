homeassistant:
  customize:
    group.rear_thermostat:
      friendly_name: 'Rear Temps/Thermostat'
      icon: mdi:fan
    sensor.rear_temps:
      icon: mdi:thermometer

sensor:
  - platform: template
    sensors:
      rear_temps:
        friendly_name: "Rear Temps"
        unit_of_measurement: 'Â°F'
        entity_id:
          - sensor.kitchen_thermostat_temp
          - sensor.mbr_temp
          - input_boolean.kitchen_thermostat_occupied
          - input_boolean.mbr_occupied
          - input_select.rear_function
        value_template: >
            {% macro mean(values) -%}
               {{- (values|sum) / (values|length) -}}
            {%- endmacro %}
            {% macro get_temp(rooms) -%}
              {% for room in rooms -%}
                {%- if states.input_boolean[room ~ "_occupied"].state == "on" -%}
                  {{-states.sensor[room ~ "_temp"].state-}},
                {%- endif -%}
              {%- endfor -%}
            {%- endmacro %}
            {%- set the_rooms = ['mbr', 'kitchen_thermostat'] -%}
            {%- set temps = get_temp(the_rooms).split(",") | reject('eq','') | map('float') | list -%}
            {%- if states.input_select.rear_function.state == "mean" -%}
              {{- mean(temps) | round(1) -}}
            {%- elif states.input_select.rear_function.state == "max" -%}
              {{- temps | max | round(1) -}}
            {%- elif states.input_select.rear_function.state == "min" -%}
              {{- temps | min | round(1) -}}
            {%- else -%}
              Barf
            {%- endif -%}

input_select:
  # --- Rear Thermostate Mode dropdown ---
  rear_thermostat_mode:
    name: Rear Thermostat Mode
    options:
      - "auto"
      - "off"
      - "cool"
      - "heat"
    icon: mdi:fan

  rear_function:
    name: Rear Combining Function
    initial: mean
    options:
      - "min"
      - "max"
      - "mean"
    icon: mdi:function

input_number:
  # -- Rear Therm targets ---
  rear_heating_target:
    name: Rear Heating Target
    initial: 68
    min: 50
    max: 75
    step: 1

  rear_cooling_target:
    name: Rear Cooling Target
    initial: 76
    min: 70
    max: 110
    step: 1

input_boolean:
  kitchen_thermostat_occupied:
    name: Kitchen Occupied
    initial: 'on'
  mbr_occupied:
    name: Master Bedroom Occupied
    initial: 'on'
      # - sensor.kitchen_thermostat_temp
      # - sensor.mbr_temp

group:
  rear_thermostat:
    - sensor.rear_temps
    - input_select.rear_function
    - input_select.rear_thermostat_mode
    # - switch.rear_thermostat_fan_mode
    - sensor.kitchen_thermostat_current_state
    - input_number.rear_heating_target
    - input_number.rear_cooling_target
  rear_occupied:
    name: Rear Occupied
    control: hidden
    entities:
      - input_boolean.kitchen_thermostat_occupied
      - input_boolean.mbr_occupied

automation:

  # --- Rear Thermostat ---
  # Keep mode in sync b/w MQTT/dropdown
  - alias: Set Rear Thermostat Mode Selector
    trigger:
      - platform: mqtt
        topic: "smartthings/Kitchen Thermostat/thermostatMode"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.rear_thermostat_mode
          option: '{{ trigger.payload }}'
  - alias: Set Rear Thermostat Mode
    trigger:
      - platform: state
        entity_id: input_select.rear_thermostat_mode
      # Might need for this and for setpoint
      # - platform: event
      #   event_type: state_change
      #   event_data:
      #     entity_id: sensor.rear_thermostat_current_mode
    action:
      - service: mqtt.publish
        data_template:
          topic: "smartthings/Kitchen Thermostat/thermostatMode"
          payload: '{{ states.input_select.rear_thermostat_mode.state }}'
          retain: true

  # Adj Kitchen Thermostat to meet Rear Temp (heat)
  - alias: Rear Heating Target Set
    initial_state: 'off'
    trigger:
      - platform: state
        entity_id: input_number.rear_heating_target
      - platform: state
        entity_id: input_select.rear_thermostat_mode
      - platform: state
        entity_id: sensor.rear_temps
    condition:
      condition: state
      entity_id: input_select.rear_thermostat_mode
      state: 'heat'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.kitchen_heating_target
          value: >-
            {%  set temp = { "observed":   float(states.sensor.rear_temps.state),
                             "target":     float(states.input_number.rear_heating_target.state),
                             "thermostat": float(states.sensor.kitchen_thermostat_temp.state) } %}
            {% if temp.observed < temp.target - 1 %}
                {{ [ temp.thermostat + 1.5, 70 ] | min }}
            {% elif temp.observed >= temp.target - 1 %}
                {{ [ temp.thermostat - 1.5, 50 ] | max }}
            {% endif %}
      - service: system_log.write
        data_template:
          message: >-
            Changing kitchen_heating_target to {{ states.sensor.kitchen_heating_target.state }}
          level: info

  # Adj Kitchen Thermostat to meet Rear Temp (a/c)
  - alias: Rear A/C Target Set
    initial_state: 'off'
    trigger:
      - platform: state
        entity_id: input_number.rear_cooling_target
      - platform: state
        entity_id: input_select.rear_thermostat_mode
      - platform: state
        entity_id: sensor.rear_temps
    condition:
      condition: state
      entity_id: input_select.rear_thermostat_mode
      state: 'cool'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.kitchen_cooling_target
          value: >-
            {%  set temp = { "observed":   float(states.sensor.rear_temps.state),
                             "target":     float(states.input_number.rear_cooling_target.state),
                             "thermostat": float(states.sensor.kitchen_thermostat_temp.state) } %}
            {% if temp.observed > temp.target + 1 %}
                {{ [ temp.thermostat - 1.5, 64 ] | max }}
            {% elif temp.observed <= temp.target + 1 %}
                {{ [ temp.thermostat - 1.5, 80 ] | min }}
            {% endif %}
      - service: system_log.write
        data_template:
          message: >-
            Changing kitchen_cooling_target to {{ states.sensor.kitchen_cooling_target.state }}
          level: info
