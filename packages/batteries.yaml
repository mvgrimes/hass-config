sensor:
  - platform: template
    sensors:
      low_battery:
        friendly_name: "Low Battery"
        value_template: >
          {%- set threshold = 100 -%}
          {%- set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] -%}
          {%- for domain in domains -%}
          {%-   for item in states[domain] -%}
          {%-     if ((item.attributes.battery_level is defined and "panel" not in item.name|lower and item.attributes['battery_level']|int < threshold)
                          or ("battery" in item.name|lower and ((item.state|int < threshold and item.state|int != 0)
                          or item.state|lower == "low" or item.state|lower == "unknownx"))) -%}
                      {{ item.attributes.friendly_name -}}
                      is {{ item.attributes['battery_level'] or item.state }}%
                      {{- ', ' }}
          {%-     endif -%}
          {%-   endfor -%}
          {%- endfor -%}

automation:
  - alias: 'Battery Alert'
    trigger:
      - platform: time
        at: '10:00:00'
      - platform: time
        at: '18:00:00'
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.low_battery
      - condition: and
        conditions:
          - condition: template
            value_template: "{% if states('sensor.low_battery') %}true{% endif %}"
      - service: persistent_notification.create
        data_template:
          title: Low Battery
          message: "{{ states('sensor.low_battery') }}"
          notification_id: low-battery-alert
      - service: notify.pushover
        data_template:
          message: >-
            Low batteries levels: {{ states('sensor.low_battery') }}
